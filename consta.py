import numpy as np 
from more_itertools.recipes import grouper, pairwise

colors_body = np.array([[255.0,     0.0,    85.0    ],
         [   255.0,     0.0,     0.0 ],
         [   255.0,    85.0,     0.0 ],
         [   255.0,   170.0,     0.0 ],
         [   255.0,   255.0,     0.0 ],
         [   170.0,   255.0,     0.0 ],
         [   85.0,   255.0,     0.0  ],
         [   0.0,   255.0,     0.0   ],
         [   255.0,     0.0,     0.0 ],
         [   0.0,   255.0,    85.0   ],
         [   0.0,   255.0,   170.0   ],
         [   0.0,   255.0,   255.0   ],
         [   0.0,   170.0,   255.0   ],
         [   0.0,    85.0,   255.0   ],
         [   0.0,     0.0,   255.0   ],
         [   255.0,     0.0,   170.0 ],
         [   170.0,     0.0,   255.0 ],
         [   255.0,     0.0,   255.0 ],
         [   85.0,     0.0,   255.0  ],
         [   0.0,     0.0,   255.0   ],
         [   0.0,     0.0,   255.0   ],
         [   0.0,     0.0,   255.0   ],
         [   0.0,   255.0,   255.0   ],
         [   0.0,   255.0,   255.0   ],
         [   0.0,   255.0,   255.0   ]]) / 255
colors_body = colors_body.tolist()
colors_right=[[255.0,    0.0,    0.0],
[  191.0,   47.0,   47.0],
[  127.0,   63.0,   63.0],
[  63.0,   47.0,   47.0],
[  255.0,   76.0,    0.0],
[  191.0,   57.0,    0.0],
[  127.0,   38.0,    0.0],
[  63.0,   19.0,    0.0],
[  255.0,  152.0,    0.0],
[  191.0,  114.0,    0.0],
[  127.0,   76.0,    0.0],
[  63.0,   38.0,    0.0],
[  255.0,  255.0,    0.0],
[  191.0,  191.0,    0.0],
[  127.0,  127.0,    0.0],
[  63.0,   63.0,    0.0],
[  0.0,  255.0,    0.0],
[  0.0,  191.0,    0.0],
[  0.0,  127.0,    0.0],
[  0.0,   63.0,    0.0,] ]
colors_left =[[255.0,    0.0,  153.0],
[      191.0,    0.0,  114.0],
[      127.0,    0.0,   76.0],
[      63.0,    0.0,   38.0],
[      203.0,    0.0,  255.0],
[      152.0,    0.0,  191.0],
[      101.0,    0.0,  127.0],
[      50.0,    0.0,   63.0],
[      50.0,    0.0,  255.0],
[      37.0,    0.0,  191.0],
[      25.0,    0.0,  127.0],
[      12.0,    0.0,   63.0],
[      0.0,  102.0,  255.0],
[      0.0,   76.0,  191.0],
[      0.0,   51.0,  127.0],
[      0.0,   25.0,   63.0],
[      0.0,  255.0,  255.0],
[      0.0,  191.0,  191.0],
[      0.0,  127.0,  127.0],
[      0.0,   63.0,   63.0,] ]

BODY_25_LINES = [
    [17, 15, 0, 1, 8, 9, 10, 11, 22, 23],  # Right eye down to right leg
    [11, 24],  # Right heel
    [0, 16, 18],  # Left eye
    [4, 3, 2, 1, 5, 6, 7],  # Arms
    [8, 12, 13, 14, 19, 20],  # Left leg
    [14, 21]  # Left heel
]

FACE_70_LINES = [
    [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],
    [17,18,19,20,21], [22,23,24,25,26],
    [27,28,29,30], [31,32,33,34,35],
    [36,37,38,39,40,41,36], [42,43,44,45,46,47,42],
    [48,49,50,51,52,53,54,55,56,57,58,59,48],
    [60,61,62,63,64,65,66,67],
    [68,68], [69,69]
]
HAND_21_LINES = [
    [0,1,2,3,4],
    [0,5,6,7,8],
    [0,9,10,11,12],
    [0,13,14,15,16],
    [0,17,18,19,20]
]
def build_graph(lines):
    graph = {}
    for line in lines:
        for n1, n2 in pairwise(line):
            if n1 > n2:
                n1, n2 = n2, n1
            graph.setdefault(n1, set()).add(n2)
    return graph


def max_dim(doc, dim):
    return max((
        val
        for person in doc["people"]
        for numarr in person.values()
        for val in numarr[dim::3]
    ))


BODY_25_GRAPH = build_graph(BODY_25_LINES)
FACE_70_GRAPH = build_graph(FACE_70_LINES)
HAND_21_GRAPH = build_graph(HAND_21_LINES)